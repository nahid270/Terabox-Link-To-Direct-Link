from pyrogram import Client, filters
from pyrogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from flask import Flask
import threading
import requests
import asyncio
import os 

# --- ‡¶ö‡ßÇ‡¶°‡¶º‡¶æ‡¶®‡ßç‡¶§ ‡¶ï‡¶®‡¶´‡¶ø‡¶ó‡¶æ‡¶∞‡ßá‡¶∂‡¶® ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶æ ---
# Note: ‡¶∏‡ßá‡¶∂‡¶® ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶≤‡ßá ‡¶è‡¶ü‡¶ø‡¶á ‡¶ï‡ßç‡¶≤‡¶æ‡¶Ø‡¶º‡ßá‡¶®‡ßç‡¶ü‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡¶¨‡ßá ‡¶è‡¶¨‡¶Ç ‡¶∏‡ßá‡¶∂‡¶® ‡¶´‡¶æ‡¶á‡¶≤ ‡¶è‡¶°‡¶º‡¶æ‡¶®‡ßã ‡¶Ø‡¶æ‡¶¨‡ßá‡•§
SESSION_STRING = os.environ.get("SESSION_STRING", None)
BOT_TOKEN = os.environ.get("BOT_TOKEN", "7991711310:AAHIZbDdINXt9haVibV-sBLsq2N4S-hyxDQ")

# API ID/Hash ‡¶∏‡¶∞‡¶æ‡¶∏‡¶∞‡¶ø ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá (‡¶Ø‡¶¶‡¶ø‡¶ì ‡¶è‡¶ó‡ßÅ‡¶≤‡¶ø ‡¶∏‡ßá‡¶∂‡¶® ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç ‡¶è ‡¶è‡¶Æ‡¶¨‡ßá‡¶°‡ßá‡¶° ‡¶•‡¶æ‡¶ï‡ßá, Pyrogram ‡¶∏‡ßá‡¶´‡¶ü‡¶ø‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶ö‡¶æ‡¶Ø‡¶º)
API_ID = int(os.environ.get("API_ID", 28870226))
API_HASH = os.environ.get("API_HASH", "a5b1ff3f75941649bf5bc159782f0f00") 

# ‡¶ï‡ßç‡¶≤‡¶æ‡¶Ø‡¶º‡ßá‡¶®‡ßç‡¶ü ‡¶®‡ßá‡¶Æ ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶®: ‡¶Ø‡¶¶‡¶ø SESSION_STRING ‡¶•‡¶æ‡¶ï‡ßá, ‡¶§‡¶¨‡ßá ‡¶∏‡ßá‡¶ü‡¶ø ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶¨‡ßá‡•§ 
# ‡¶Ö‡¶®‡ßç‡¶Ø‡¶•‡¶æ‡¶Ø‡¶º ‡¶°‡¶ø‡¶´‡¶≤‡ßç‡¶ü ‡¶®‡¶æ‡¶Æ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶¨‡ßá (‡¶Ø‡¶æ ‡¶´‡¶æ‡¶á‡¶≤ ‡¶∏‡ßá‡¶≠ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡¶¨‡ßá)‡•§
CLIENT_NAME_OR_STRING = SESSION_STRING if SESSION_STRING else "terabox_downloader_bot"


# --- Pyrogram ‡¶è‡¶¨‡¶Ç Flask ‡¶∏‡ßá‡¶ü‡¶Ü‡¶™ ---
app = Flask(__name__)

bot = Client(
    CLIENT_NAME_OR_STRING, 
    api_id=API_ID,
    api_hash=API_HASH,
    bot_token=BOT_TOKEN
)

# ... (‡¶¨‡¶æ‡¶ï‡¶ø handler ‡¶è‡¶¨‡¶Ç flask ‡¶∞‡ßÅ‡¶ü ‡¶Ö‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶ø‡¶§ ‡¶•‡¶æ‡¶ï‡¶¨‡ßá) ...
# ... (‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ start_handler, get_video_handler ‡¶è‡¶¨‡¶Ç home ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®‡¶ó‡ßÅ‡¶≤‡ßã ‡¶Ø‡ßá‡¶Æ‡¶® ‡¶Ü‡¶õ‡ßá ‡¶§‡ßá‡¶Æ‡¶®‡¶á ‡¶•‡¶æ‡¶ï‡¶¨‡ßá) ...

# --- ‡ß©. ‡¶™‡ßç‡¶∞‡ßã‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡¶æ (‡¶ö‡ßÇ‡¶°‡¶º‡¶æ‡¶®‡ßç‡¶§ ‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø‡¶Æ‡ßÅ‡¶ï‡ßç‡¶§ ‡¶≤‡¶ú‡¶ø‡¶ï) ---

if __name__ == "__main__":
    
    def start_bot():
        """Pyrogram ‡¶ï‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶Ü‡¶≤‡¶æ‡¶¶‡¶æ ‡¶•‡ßç‡¶∞‡ßá‡¶°‡ßá, ‡¶Æ‡ßç‡¶Ø‡¶æ‡¶®‡ßÅ‡¶Ø‡¶º‡¶æ‡¶≤ asyncio ‡¶≤‡ßÅ‡¶™‡ßá ‡¶ö‡¶æ‡¶≤‡¶æ‡¶®‡ßã‡•§"""
        loop = asyncio.new_event_loop()
        asyncio.set_event_loop(loop)
        
        async def run_pyrogram():
            try:
                if not CLIENT_NAME_OR_STRING:
                    print("‚ö†Ô∏è WARNING: SESSION_STRING not found. Relying on file system save.")
                    
                await bot.start()
                print("‚úÖ [STATUS] Pyrogram bot connected successfully.")
                
                # ‡¶¨‡¶ü‡¶ï‡ßá ‡¶Ö‡¶®‡¶ø‡¶∞‡ßç‡¶¶‡¶ø‡¶∑‡ßç‡¶ü‡¶ï‡¶æ‡¶≤ ‡¶ß‡¶∞‡ßá ‡¶ö‡¶æ‡¶≤‡ßÅ ‡¶∞‡¶æ‡¶ñ‡¶æ
                await asyncio.Future() 
                
            except Exception as e:
                print(f"‚ùå [FATAL ERROR] Pyrogram connection error: {e}")
            finally:
                await bot.stop()
                print("üõë [STATUS] Pyrogram bot stopped.")

        print("üîÑ [SETUP] Pyrogram bot setup complete. Starting loop...")
        loop.run_until_complete(run_pyrogram())
        
    # ‡¶¨‡¶ü‡¶ï‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶Ü‡¶≤‡¶æ‡¶¶‡¶æ ‡¶•‡ßç‡¶∞‡ßá‡¶°‡ßá ‡¶ö‡¶æ‡¶≤‡¶æ‡¶®‡ßã
    threading.Thread(target=start_bot, name='PyrogramThread').start()
    
    # ‡¶´‡ßç‡¶≤‡¶æ‡¶∏‡ßç‡¶ï ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡¶ï‡ßá ‡¶Æ‡ßÇ‡¶≤ ‡¶•‡ßç‡¶∞‡ßá‡¶°‡ßá ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡¶æ
    print("üöÄ [STATUS] Flask web server started on port 8080.")
    app.run(host="0.0.0.0", port=8080)
