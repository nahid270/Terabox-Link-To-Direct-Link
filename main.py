from pyrogram import Client, filters
from pyrogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from flask import Flask
import threading, requests

BOT_TOKEN = "YOUR_BOT_TOKEN"  # ‚Üê ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶¨‡¶ü ‡¶ü‡ßã‡¶ï‡ßá‡¶® ‡¶¨‡¶∏‡¶æ‡¶ì

app = Flask(__name__)
bot = Client("terabox-bot", bot_token=BOT_TOKEN)

@app.route('/')
def home():
    return "‚úÖ Terabox Watch Bot is Running Successfully!"

@bot.on_message(filters.command("start"))
async def start(_, msg):
    await msg.reply_text(
        "üëã ‡¶π‡ßç‡¶Ø‡¶æ‡¶≤‡ßã!\n\nüé¨ ‡¶Ü‡¶Æ‡¶ø **Terabox Watch Bot**!\n\n‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶Ü‡¶Æ‡¶æ‡¶ï‡ßá ‡¶è‡¶ï‡¶ü‡¶æ **Terabox ‡¶≤‡¶ø‡¶Ç‡¶ï** ‡¶™‡¶æ‡¶†‡¶æ‡¶ì, ‡¶Ü‡¶Æ‡¶ø ‡¶§‡ßã‡¶Æ‡¶æ‡¶ï‡ßá ‡¶∏‡¶∞‡¶æ‡¶∏‡¶∞‡¶ø ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶¶‡ßá‡¶ñ‡¶æ‡¶∞ ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá ‡¶¶‡ßá‡¶¨ üî•"
    )

@bot.on_message(filters.text & ~filters.command("start"))
async def get_video(_, msg):
    link = msg.text.strip()
    if "terabox" not in link:
        return await msg.reply_text("‚ùå ‡¶¶‡¶Ø‡¶º‡¶æ ‡¶ï‡¶∞‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶¨‡ßà‡¶ß Terabox ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶™‡¶æ‡¶†‡¶æ‡¶ì!")

    try:
        api = f"https://terabox-api.vercel.app/api?url={link}"
        res = requests.get(api).json()
        if res.get("success") and res.get("downloadLink"):
            video_url = res["downloadLink"]
            await msg.reply_text(
                "üé• ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶∞‡ßá‡¶°‡¶ø! ‡¶è‡¶ñ‡¶®‡¶á ‡¶¶‡ßá‡¶ñ‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßã üëá",
                reply_markup=InlineKeyboardMarkup(
                    [[InlineKeyboardButton("‚ñ∂Ô∏è Watch Now", url=video_url)]]
                )
            )
        else:
            await msg.reply_text("‚ö†Ô∏è ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡¶ø, ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßã‡•§")
    except Exception as e:
        await msg.reply_text(f"‚ö†Ô∏è ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶è‡¶ï‡¶ü‡¶æ ‡¶≠‡ßÅ‡¶≤ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá:\n`{e}`")

if __name__ == "__main__":
    threading.Thread(target=lambda: bot.run()).start()
    app.run(host="0.0.0.0", port=8080)
